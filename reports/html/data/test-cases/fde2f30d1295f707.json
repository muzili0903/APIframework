{
  "uid" : "fde2f30d1295f707",
  "name" : "test_test_scene_1[test_case1]",
  "fullName" : "testCases.test_test_Test_scene_1#test_test_scene_1",
  "historyId" : "7df61a84075a06511f446354177dd193",
  "time" : {
    "start" : 1654783826667,
    "stop" : 1654783826683,
    "duration" : 16
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert True == False\n  +True\n  -False",
  "statusTrace" : "test_case = {'test': {'step_2': {'data': {'appId': 'IBCP', 'appKey': '123456'}, 'script': {'request_body': {'appId': '${appId}', '...; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36', 'connection': 'keep-alive', ...}}}}}\n\n    @pytest.mark.parametrize(\"test_case\", test_case)\n    @allure.story(\"test_test_scene_1\")\n    def test_test_scene_1(test_case):\n        api_name = list(test_case.keys())[0]\n        api_content = list(test_case.values())[0]\n        api_step = list(api_content.keys())[0]\n        api_step_content = list(api_content.values())[0]\n        test_info = api_step_content['script']\n        test_data = api_step_content['data']\n        expect_data = test_info.pop('check_body')\n        api_info = ini_package(test_info, test_data)\n        result = requestSend(api_step, api_name, api_info)\n>       assert True == check_res(result, expect_data)\nE       assert True == False\nE         +True\nE         -False\n\ntestCases\\test_test_Test_scene_1.py:27: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert True == False\n  +True\n  -False",
    "statusTrace" : "test_case = {'test': {'step_2': {'data': {'appId': 'IBCP', 'appKey': '123456'}, 'script': {'request_body': {'appId': '${appId}', '...; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36', 'connection': 'keep-alive', ...}}}}}\n\n    @pytest.mark.parametrize(\"test_case\", test_case)\n    @allure.story(\"test_test_scene_1\")\n    def test_test_scene_1(test_case):\n        api_name = list(test_case.keys())[0]\n        api_content = list(test_case.values())[0]\n        api_step = list(api_content.keys())[0]\n        api_step_content = list(api_content.values())[0]\n        test_info = api_step_content['script']\n        test_data = api_step_content['data']\n        expect_data = test_info.pop('check_body')\n        api_info = ini_package(test_info, test_data)\n        result = requestSend(api_step, api_name, api_info)\n>       assert True == check_res(result, expect_data)\nE       assert True == False\nE         +True\nE         -False\n\ntestCases\\test_test_Test_scene_1.py:27: AssertionError",
    "steps" : [ {
      "name" : "请求步骤: step_2, 接口名: test",
      "time" : {
        "start" : 1654783826667,
        "stop" : 1654783826667,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "c6184e960fc10231",
        "name" : "请求方法",
        "source" : "c6184e960fc10231.attach",
        "type" : "text/plain",
        "size" : 4
      }, {
        "uid" : "3e51325c9b9694f1",
        "name" : "请求地址",
        "source" : "3e51325c9b9694f1.attach",
        "type" : "text/plain",
        "size" : 58
      }, {
        "uid" : "6f2860923847dac2",
        "name" : "请求头",
        "source" : "6f2860923847dac2.attach",
        "type" : "text/plain",
        "size" : 260
      }, {
        "uid" : "8b3b96e26d51a960",
        "name" : "请求参数",
        "source" : "8b3b96e26d51a960.attach",
        "type" : "text/plain",
        "size" : 868
      } ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 4,
      "shouldDisplayMessage" : false
    }, {
      "name" : "check_json: code校验",
      "time" : {
        "start" : 1654783826683,
        "stop" : 1654783826683,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "886573ce4121c2c7",
        "name" : "预期响应码: ",
        "source" : "886573ce4121c2c7.attach",
        "type" : "text/plain",
        "size" : 3
      }, {
        "uid" : "952413bac91c0e99",
        "name" : "实际响应码: ",
        "source" : "952413bac91c0e99.attach",
        "type" : "text/plain",
        "size" : 3
      } ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false
    }, {
      "name" : "check_json: data校验",
      "time" : {
        "start" : 1654783826683,
        "stop" : 1654783826683,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "e3b5f365af2e129b",
        "name" : "校验方式: ",
        "source" : "e3b5f365af2e129b.attach",
        "type" : "text/plain",
        "size" : 13
      }, {
        "uid" : "4502538f9bda7a72",
        "name" : "预期结果: ",
        "source" : "4502538f9bda7a72.attach",
        "type" : "text/plain",
        "size" : 41
      }, {
        "uid" : "bc29a4024bca2d59",
        "name" : "实际结果: ",
        "source" : "bc29a4024bca2d59.attach",
        "type" : "text/plain",
        "size" : 40
      } ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 3,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "764e670c30a8f08c",
      "name" : "log",
      "source" : "764e670c30a8f08c.txt",
      "type" : "text/plain",
      "size" : 4021
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 3,
    "attachmentsCount" : 10,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "test_test_scene_1"
  }, {
    "name" : "parentSuite",
    "value" : "testCases"
  }, {
    "name" : "suite",
    "value" : "test_test_Test_scene_1"
  }, {
    "name" : "host",
    "value" : "LAPTOP-TT5JR8LD"
  }, {
    "name" : "thread",
    "value" : "11496-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testCases.test_test_Test_scene_1"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "test_case",
    "value" : "{'test': {'step_2': {'script': {'request_header': {'method': 'post', 'path': '/invoice/trans/blue', 'connection': 'keep-alive', 'timeout': 10}, 'request_body': {'appId': '${appId}', 'appKey': '${appKey}', 'data': {'invoiceAmt': 610.0, 'immediateInvoice': 1, 'payTaxpayerName': 'muzili', 'invoiceHead': 1, 'bizId': 'DZFP$(fdate)$(ftime)$(fnum::length=4)', 'invoiceType': 3, 'remarks': '票面备注：客户名称：muzili, bizId=DZFP2022051811024063', 'taxpayerCode': '440002999999441', 'businessNo': '$(fdate)$(ftime)', 'detailList': [{'standards': 'MT-TZBKC01', 'taxRate': 0.13, 'taxUnitPrice': 180.0, 'businessNo': 'DZFP$(fdate)$(ftime)$(fnum::length=2)', 'goodCount': 1, 'goodUnit': '台', 'bizDetailId': 'PFMX$(fnum::length=11)', 'amtContainTax': 180.0, 'taxCode': '1080422', 'goodsName': 'Micca 炊具'}, {'standards': 'MP-SJ20W101', 'taxRate': 0.13, 'taxUnitPrice': 430.0, 'businessNo': 'DZFP$(fdate)$(ftime)$(fnum::length=2)', 'goodCount': 1, 'goodUnit': '台', 'bizDetailId': 'PFMX$(fnum::length=11)', 'amtContainTax': 430.0, 'taxCode': '107060112', 'goodsName': 'Midea/美的 餐饮具'}]}}, 'check_body': {'check_json': {'check_type': 'perfect_match', 'expected_code': 200, 'expected_result': 'test_response.json'}}}, 'data': {'appId': 'IBCP', 'appKey': '123456'}}}}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "fde2f30d1295f707.json",
  "parameterValues" : [ "{'test': {'step_2': {'script': {'request_header': {'method': 'post', 'path': '/invoice/trans/blue', 'connection': 'keep-alive', 'timeout': 10}, 'request_body': {'appId': '${appId}', 'appKey': '${appKey}', 'data': {'invoiceAmt': 610.0, 'immediateInvoice': 1, 'payTaxpayerName': 'muzili', 'invoiceHead': 1, 'bizId': 'DZFP$(fdate)$(ftime)$(fnum::length=4)', 'invoiceType': 3, 'remarks': '票面备注：客户名称：muzili, bizId=DZFP2022051811024063', 'taxpayerCode': '440002999999441', 'businessNo': '$(fdate)$(ftime)', 'detailList': [{'standards': 'MT-TZBKC01', 'taxRate': 0.13, 'taxUnitPrice': 180.0, 'businessNo': 'DZFP$(fdate)$(ftime)$(fnum::length=2)', 'goodCount': 1, 'goodUnit': '台', 'bizDetailId': 'PFMX$(fnum::length=11)', 'amtContainTax': 180.0, 'taxCode': '1080422', 'goodsName': 'Micca 炊具'}, {'standards': 'MP-SJ20W101', 'taxRate': 0.13, 'taxUnitPrice': 430.0, 'businessNo': 'DZFP$(fdate)$(ftime)$(fnum::length=2)', 'goodCount': 1, 'goodUnit': '台', 'bizDetailId': 'PFMX$(fnum::length=11)', 'amtContainTax': 430.0, 'taxCode': '107060112', 'goodsName': 'Midea/美的 餐饮具'}]}}, 'check_body': {'check_json': {'check_type': 'perfect_match', 'expected_code': 200, 'expected_result': 'test_response.json'}}}, 'data': {'appId': 'IBCP', 'appKey': '123456'}}}}" ]
}