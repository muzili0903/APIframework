{
  "uid" : "61a6c8b8ae9e90b4",
  "name" : "test_test_scene_1[test_case4]",
  "fullName" : "testCases.addInvoiceToConfirm.test_invoice_manage1_Test_scene_1#test_test_scene_1",
  "historyId" : "e402d4f5afdb11afc56a2e52b250b8b7",
  "time" : {
    "start" : 1656032572845,
    "stop" : 1656032573568,
    "duration" : 723
  },
  "status" : "broken",
  "statusMessage" : "AttributeError: 'NoneType' object has no attribute 'get'",
  "statusTrace" : "login_manage = <requests.sessions.Session object at 0x000001A573FBE490>\ntest_case = {'batchInvoice': {'step_5': {'data': {'sql': \"['select id from t_invoice_trans where business_no = $Req{addInvoiceToCo...ep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Method': 'post', 'User-Agent': 'Mozilla/5.0', ...}}}}}\n\n    @pytest.mark.parametrize(\"test_case\", test_case)\n    @allure.story(\"test_test_scene_1\")\n    def test_test_scene_1(login_manage, test_case):\n        api_name = list(test_case.keys())[0]\n        api_content = list(test_case.values())[0]\n        api_step = list(api_content.keys())[0]\n        api_step_content = list(api_content.values())[0]\n        test_info = api_step_content['script']\n        test_data = api_step_content['data']\n        expect_data = test_info.get('check_body')\n>       api_info = ini_package(test_info, test_data)\n\ntestCases\\addInvoiceToConfirm\\test_invoice_manage1_Test_scene_1.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncom\\core\\initializeParam.py:115: in ini_package\n    body = ini_params(script.get('request_body'), data)\ncom\\core\\initializeParam.py:101: in ini_params\n    test_info = eval(replaceData.replace_db(str(test_info), test_data))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncase = \"{'str': '$DB{id}'}\"\ndata = {'sql': \"['select id from t_invoice_trans where business_no = $Req{addInvoiceToConfirm.data.businessNos}']\"}\n\n    def replace_db(case, data: dict):\n        \"\"\"\n        从数据库中查询替换请求报文中的参数值 $DB{变量名}\n        :param case: 用例报文\n        :param data: 用例数据\n        :return:\n        \"\"\"\n        if re.search('\\$DB\\{.*?\\}', case) is not None:\n            res = re.findall('\\$DB\\{.*?\\}', case)\n        else:\n            return case\n        logging.info(\"获取到的sql语句: >>>{}\".format(data.get('sql')))\n        query_result = query_db(eval(data.get('sql')))\n        try:\n            for index in range(len(res)):\n                var = res[index].split('{')[1].split('}')[0]\n                for result in query_result:\n>                   value = result.get(var)\nE                   AttributeError: 'NoneType' object has no attribute 'get'\n\ncom\\core\\replaceData.py:76: AttributeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "login_manage",
    "time" : {
      "start" : 1656032558477,
      "stop" : 1656032561066,
      "duration" : 2589
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "test_test_scene_1"
  }, {
    "name" : "parentSuite",
    "value" : "testCases.addInvoiceToConfirm"
  }, {
    "name" : "suite",
    "value" : "test_invoice_manage1_Test_scene_1"
  }, {
    "name" : "host",
    "value" : "CN01XIT00000ZON"
  }, {
    "name" : "thread",
    "value" : "11780-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testCases.addInvoiceToConfirm.test_invoice_manage1_Test_scene_1"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "test_case",
    "value" : "{'batchInvoice': {'step_5': {'script': {'request_header': {'Method': 'post', 'path': '/mage/draft/batchInvoice', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'timeout': 10, 'sleep_time': 0, 'is_login': True}, 'request_body': {'str': '$DB{id}'}, 'check_body': {'check_json': {'check_type': 'perfect_match', 'expected_code': 200, 'expected_result': 'batchInvoice_response.json'}}}, 'data': {'sql': \"['select id from t_invoice_trans where business_no = $Req{addInvoiceToConfirm.data.businessNos}']\"}}}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "61a6c8b8ae9e90b4.json",
  "parameterValues" : [ "{'batchInvoice': {'step_5': {'script': {'request_header': {'Method': 'post', 'path': '/mage/draft/batchInvoice', 'Connection': 'keep-alive', 'Content-Type': 'application/x-www-form-urlencoded', 'timeout': 10, 'sleep_time': 0, 'is_login': True}, 'request_body': {'str': '$DB{id}'}, 'check_body': {'check_json': {'check_type': 'perfect_match', 'expected_code': 200, 'expected_result': 'batchInvoice_response.json'}}}, 'data': {'sql': \"['select id from t_invoice_trans where business_no = $Req{addInvoiceToConfirm.data.businessNos}']\"}}}}" ]
}